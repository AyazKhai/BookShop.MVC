@using System.Globalization
@model IEnumerable<Book>
@{
    string authorsDisplay = "";
    string genres = "";
    string authorname = " ";
    string imgurl = " ";
}
<head>
    <link rel="stylesheet" href="~/css/product_page.css" />
</head>


<div class="product_page_container">
    <div class="wrapper">
        <div class="book_container">
            <div class="buy_book">
                <div class="product">
                    @* <div class="product-container">
                        @if (Model.Imagelinks != null)
                        {
                             if (Model.Imagelinks[0].Size == 1)
                                {
                                    <img src="@Url.Content($"~/img/boksCards/{Model.Imagelinks[0].Url}")" alt="Product Background" class="product-background-image" />
                                }
                                else
                                {
                                     <img src="~/img/boksCards/background.svg" alt="Product Background" class="product-background-image">
                                    <img src="@Url.Content($"~/img/boksCards/{Model.Imagelinks[0].Url}")" alt="Product Image" class="product-image" />
                                }

                        }
                        else
                        {
                            <img src="~/img/boksCards/background.svg" alt="Product Background" class="product-background-image">
                            <img src="~/img/boksCards/book-placeholder.webp" alt="Product Image" class="product-image">
                        }
                    </div> *@
                    <div class="product-container">
                        @if (Model.First().Imagelinks != null && Model.First().Imagelinks.Any())
                        {

                            foreach (var image in Model.First().Imagelinks)
                            {
                                if (image.Size == 1)
                                {
                                    <img src="@Url.Content("~/img/boksCards/" + image.Url)" alt="Product Background" class="product-background-image" />
                                    imgurl = image.Url;
                                }
                                else
                                {
                                    <img src="~/img/boksCards/background.svg" alt="Product Background" class="product-background-image">
                                    <img src="@Url.Content("~/img/boksCards/" + image.Url)" alt="Product Image" class="product-image" />
                                    imgurl = image.Url;
                                }
                            }
                        }
                        else
                        {
                            <img src="@Url.Content("~/img/boksCards/background.svg")" alt="Product Background" class="product-background-image" />
                            <img src="@Url.Content("~/img/boksCards/book-placeholder.webp")" alt="Product Image" class="product-image" />
                        }
                    </div>

                </div>
            </div>
            <div class="about_book">
                
                <div class="title">
                    <a>@Model.First().Title</a>
                </div>
                <div class="author">
                    @if (Model.First().Authors != null && Model.First().Authors.Any())
                    {

                        foreach (var auth in Model.First().Authors)
                        {
                            if (auth != null) // Проверяем, что объект автора не равен null
                            {
                                var firstName = auth.FirstName ?? string.Empty; // Проверяем, что FirstName не равен null
                                var lastName = auth.LastName ?? string.Empty; // Проверяем, что LastName не равен null

                                            <a asp-area="" asp-controller="Books" asp-action="AuthorPage" asp-route-id="@auth.AuthorId" asp-route-name=@($"{firstName} {lastName}")>
                                    @($"{firstName} {lastName}")
                                </a>

                                // Добавляем имя автора в строку
                                if (!string.IsNullOrEmpty(authorname))
                                {
                                    authorname += ", "; // Добавляем запятую перед следующим именем, если имя уже не пустое
                                }
                                authorname += $"{firstName} {lastName}"; // Добавляем имя автора
                            }
                        }
                    }
                    else
                    {
                        <a></a>
                    }
                </div>
                
                <div class="category_title">

                    @if (Model.First().Bookgenres != null)
                    {
                        foreach (var genr in Model.First().Bookgenres)
                        {
                            <a  asp-area=""  asp-action="Index" asp-route-id="@genr.GenreId">"@($"{genr.GenresName}")"</a>
                        }
                    }
                    else
                    {
                        <a>" "</a>
                    }


                </div>
                <div class="price">
                    <span>@Model.First().Price €</span>
                </div>

                <button class="btn_addToCart"
                        data-book-id="@Model.First().BookId.ToString()"
                        data-book-title="@Model.First().Title"
                        data-price="@Model.First().Price.ToString(CultureInfo.InvariantCulture)"
                        data-author-name="@authorname"
                        data-image-str="@imgurl">
                    <img src="~/img/svg/cart 2.svg">ADD TO CART
                </button>

                <p>Available in store and to order. We ship worldwide.</p>
                <div class="cursive">
                    As we are a small independent bookstore, your order may take between 1 to 3 working days to be prepared before being shipped/ready for collection. We appreciate your understanding.
                </div>

                @if (Model.First().BookDescription != null)
                    {
                    <div class="description">@Model.First().BookDescription</div>
                        
                    }
                    else
                    {
                           <div class="description"></div>
                    }
                   @*  ** Available for pre-order now **From the author of the multimillion-copy bestseller Normal People, an exquisitely moving story about grief, love and family. Aside from the fact that they are brothers, Peter and Ivan Koubek seem to have little in common. Peter is a Dublin lawyer in his thirties - successful, competent and apparently unassailable. But in the wake of their father's death, he's medicating himself to sleep and struggling to manage his relationships with two very different women - his enduring first love Sylvia, and Naomi, a college student for whom life is one long joke. Ivan is a twenty-two-year-old competitive chess player. He has always seen himself as socially awkward, a loner, the antithesis of his glib elder brother. Now, in the early weeks of his bereavement, Ivan meets Margaret, an older woman emerging from her own turbulent past, and their lives become rapidly and intensely intertwined. For two grieving brothers and the people they love, this is a new interlude - a period of desire, despair and possibility - a chance to find out how much one life might hold inside itself without breaking. *@
                

                <table>
                    <tr>
                        @if (Model.First().Publisher != null)
                        {
                            <td>Publisher: Model.First().Publisher.Publishername</td>
                        }
                        
                        
                    </tr>
                    <tr>
                        <td>ISBN: @(Model.First().Isbn)</td>
                    </tr>
                </table>
            </div>

        </div>
    </div>
</div>
<div class="buy_thesame">
    <div class="buy_author">
        <p>Buy the same author</p>

    </div>
    <div class="books_collection">
        @foreach (var book in Model.Skip(1).Take(4))
        {
            var dataAttributes = new Dictionary<string, string>
        {
            { "data-book-id", book.BookId.ToString() },
            { "data-book-title", book.Title },
            { "data-price", book.Price.ToString(CultureInfo.InvariantCulture) },
            { "data-author-name", " " },
            { "data-image-str", "book-placeholder.webp"}
        };
            <div class="product">

                <div class="product-container">
                    @if (book.Imagelinks != null && book.Imagelinks.Any())
                    {

                        foreach (var image in book.Imagelinks)
                        {
                            if (image.Size == 1)
                            {
                                <img src="@Url.Content("~/img/boksCards/" + image.Url)" alt="Product Background" class="product-background-image" />
                                dataAttributes["data-image-str"] = image.Url;
                            }
                            else
                            {
                                <img src="~/img/boksCards/background.svg" alt="Product Background" class="product-background-image">
                                <img src="@Url.Content("~/img/boksCards/" + image.Url)" alt="Product Image" class="product-image" />
                                dataAttributes["data-image-str"] = image.Url;
                            }
                        }
                    }
                    else
                    {
                        <img src="@Url.Content("~/img/boksCards/background.svg")" alt="Product Background" class="product-background-image" />
                        <img src="@Url.Content("~/img/boksCards/book-placeholder.webp")" alt="Product Image" class="product-image" />
                    }
                </div>

                <div class="title">
                    <a asp-controller="Books" asp-action="BookPage" asp-route-id="@book.BookId">@book.Title</a>
                </div>
                <div class="author">
                    @if (book.Authors != null)
                    {
                        string name = string.Empty;
                        foreach (var auth in book.Authors)
                        {
                            if (auth != null) // Проверяем, что объект автора не равен null
                            {
                                var firstName = auth.FirstName ?? string.Empty; // Проверяем, что FirstName не равен null
                                var lastName = auth.LastName ?? string.Empty; // Проверяем, что LastName не равен null

                                <a asp-area="" asp-controller="Books" asp-action="AuthorPage" asp-route-id="@auth.AuthorId" asp-route-name=@($"{firstName} {lastName}")>
                                    @($"{firstName} {lastName}")
                                </a>

                                // Добавляем имя автора в строку
                                if (!string.IsNullOrEmpty(name))
                                {
                                    name += ", "; // Добавляем запятую перед следующим именем, если имя уже не пустое
                                }
                                name += $"{firstName} {lastName}"; // Добавляем имя автора
                            }
                        }
                        dataAttributes["data-author-name"] = name.ToString();
                    }
                    else
                    {
                        <a></a>
                    }

                </div>

                <span>@book.Price €</span>
                <button class="btn_addToCart"
                        data-book-id="@dataAttributes["data-book-id"]"
                        data-book-title="@dataAttributes["data-book-title"]"
                        data-price="@dataAttributes["data-price"]"
                        data-author-name="@dataAttributes["data-author-name"]"
                        data-image-str="@dataAttributes["data-image-str"]">
                    <img src="~/img/svg/cart 2.svg">ADD TO CART
                </button>

            </div>
        }

       
    </div>
</div>